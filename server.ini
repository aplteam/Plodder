; Notes:
; * You may use "<INIFILE>" in any path in order to refer to the folder this log files lives in.
; * You may use "<TEMP>" in any path in order to refer to the temp folder of the current OS

home                = '<INIFILE>/'  ; This is a variable local to this INI file. Can be referenced with {home}

[CONFIG]
AppName             = 'Plodder'
DisplayRequests     = 0             ; 1 makes Rumba display every request in a ⎕ED windows. For debugging only of course.
LogHTTPToSession    = 0
MaxNoOfThreads      = 1000
Port                = 8080
Secure              = 0
HTDOCS              = '{home}'      ; Becomes global G.HTDOCS: folder with static documents

[LOGGING]
Folder              = '<TEMP>/Plodder-Logs' ; Where the log file goes
LogHTTP             = 1                     ; HTTP requests should always be logged
LogConga            = 1
LogRumba            = 1
WindowsEventLog     = ¯1            ; ¯1 = Write Start/Stop/Error events to Windows Event Log under Windows in Runtime; 1: write under Windows; 0=Never

[CERTIFICATES]
PublicCertFile      = './Assets/Runtime/Certificates/myserver-cert.pem'
PrivateKeyFile      = './Assets/Runtime/Certificates/myserver-key.pem'
CertType            = 'DER'

[EVENTS]
; These are events used by Rumba to quit ⎕DQ or to broadcasts events (pause, continue)
QuitEvent           = 9876
PauseEvent          = 9877
ContinueEvent       = 9878

[RIDE]
port                = 0          ; 0 means no RIDE; must be a positive integer otherwise
address             = '*'           
wait                = 1             ; If 1 wait for the user in an endless loop

[TRAP]
Folder              = '<TEMP>/Plodder-Errors'  ; Where error information goes.
Policy              = 1         ; ¯1 = Error trapping in Runtime but not otherwise. 1 = Trap; 0 = do not trap. General means "above" Rumba
Rumba               = 0         ; This has an effect only in development. Rumba traps all errors in Runtime in any case.

[APP]
Context             = '#.Plodder.Plodder.SampleApp'     ; Where in the workspace does the APP live?
OnStart             = 'OnStart'                         ; Once called when the server starts
OnRequest           = 'OnRequest'                       ; Called in the event of every request
OnCongaTimeout      = 'OnHouseKeeping'                  ; Do any housekeeping here
OnHeader            = 'OnHeader'                        ; Especially useful for handling "Expect" with value "100-continue"
