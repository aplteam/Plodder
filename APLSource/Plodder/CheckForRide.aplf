 {r}←{ini}CheckForRide G;INI;address;b;port;rc;wait;buff
⍝ Checks for an ENV vars -ride` specifying a port but and also the `IniFile` instance when "ini" is not empty but such an instance.
⍝ If enabled a Ride is made possible, overwriting any RIDE_INIT specified as an ENV var.
⍝ Returns 1 in case a Ride is possible and 0 otherwise.
 ini←{0<⎕NC ⍵:⍎⍵ ⋄ ⍬}'ini'
 :If 'WIN'≢1 ⎕C ##.APLTreeUtils2.GetOperatingSystem ⍬
 :AndIf 0<≢buff←⊃⎕SH'echo $RIDE_INIT'   ⍝ Are we already prepared for a Ride?
 :AndIf '$RIDE_INIT'≢buff
     {}3502⌶1                           ⍝ The we allow it
     r←1
 :Else
     port←##.APLTreeUtils2.ToNum 0 GetEnvVars'-port'
     :If 0=port
         port←{0::0 ⋄ ⍬≡⍵:0 ⋄ ⊃⍵.Get'RIDE:port'}ini
     :EndIf
     :If 0≠port
     :AndIf {0::1 ⋄ ⍬≡⍵:1 ⋄ ⊃⍵.Get'RIDE:active'}ini
         :If ~G.IsWin
             107 SignalOrQuadOff('+s'≢''GetEnvVars'+s')/'RIDE requires APL to run full screen (+s flag)'
         :EndIf
         address←{0::'*' ⋄ ⍬≡⍵:'*' ⋄ ⊃⍵.Get'RIDE:address'}ini
         rc←3502⌶'Serve:',address,':',⍕port
         :If rc∊0 ¯2 ¯1                 ⍝ 0=okay, ¯2=Ride is already active, ¯1=don;t do anything
             {}3502⌶1
             :If wait←{0::0 ⋄ ⍬≡⍵:0 ⋄ ⊃⍵.Get'RIDE:wait'}ini
                 {_←⎕DL 0.5 ⋄ ∇ ⍵}⍬     ⍝ Endless loop that allows us to have a RIDE and wait for an interrupt
             :EndIf
             r←1
         :Else
             32 SignalOrQuadOff(rc=32)/'Conga DLLs missing, therefore no Ride'
             64 SignalOrQuadOff(rc=64)/'Ride INIT illformed'
             106 SignalOrQuadOff(rc≠0)/'Ride error when resetting connection string to "',('Serve::',⍕port)'"; RC=',⍕rc
         :EndIf
     :Else
         {}3502⌶0                       ⍝ Disable it
         r←0
     :EndIf
 :EndIf
⍝Done
